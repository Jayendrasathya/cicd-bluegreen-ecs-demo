version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
  pre_build:
    commands:
      - echo Logging in to ECR..
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo Login successfull
      - echo Fetching latest tag...
      - LATEST_TAG=$(aws ecr describe-images --repository-name $REPO_NAME --query 'sort_by(imageDetails,&imagePushedAt)[-1].imageTags[0]' --output text)
      - if [[ "$LATEST_TAG" == "None" ]]; then NEW_TAG='v1.0.1'; else LAST_NUMBER=$(echo $LATEST_TAG | awk -F. '{print $3}'); NEW_LAST_NUMBER=$((LAST_NUMBER + 1)); NEW_TAG="v1.0.$NEW_LAST_NUMBER"; fi
  build:
    commands:
      - echo Installing dependencies..
      - cd Deploy-in-ECS/
      - pip install -r requirements.txt
      - echo building the docker image..
      - docker build -t $REPO_NAME:$NEW_TAG .
      - docker tag $REPO_NAME:$NEW_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$NEW_TAG
  post_build:
    commands:
      - echo pushing to the ECR repo..
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$NEW_TAG
      - echo writing image definitions file..
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$NEW_TAG > imagedefinition.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinition.json..
      - cat imagedefinition.json
  
artifacts:
  files: imagedefinition.json
  base-directory: Deploy-in-ECS/

env:
  variables:
    AWS_REGION: eu-west-2
    AWS_ACCOUNT_ID: 121099973511
    REPO_NAME: demo-cicd
    DOCKER_CONTAINER_NAME: cicd
    
